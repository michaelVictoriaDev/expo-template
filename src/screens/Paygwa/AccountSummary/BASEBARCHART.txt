import React, { Component } from 'react';
import { VictoryBar, VictoryChart, VictoryLabel, VictoryAxis } from 'victory-native';
import {widthPercentageToDP as wp, heightPercentageToDP as hp} from 'react-native-responsive-screen';
import EmptyBarGraph from '../graph-components/EmptyBarGraph';

class TotalLeadsBySourceBarGraph extends Component {

  constructor(props){
    super(props);
    this.state = {
      totalCount : this.props.totalCount,
      dataCount : this.props.dataCount,
      months : ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    }
  }

  render(){
    let dataCount = this.state.dataCount;
    let totalCount = this.state.totalCount;
    let months = this.state.months;
    let dataOfGraph = [];
    let totalCountFlag = 0;

    if(dataCount!=null)
    {
      for (let i = 0; i < dataCount.length; i++) {
        totalCountFlag = totalCountFlag + dataCount[i];
        dataOfGraph.push(
          { x: months[i], y: dataCount[i] }
        );
      }
    }

    if(totalCountFlag==0){
      return(
        <EmptyBarGraph
          chartHeight = {'60%'}
        />
      )
    }
    else{
      return (
        <VictoryChart
          domainPadding={8}
          height={hp(this.props.chartHeight)}
          >
          {/* Y AXIS */}
          <VictoryAxis dependentAxis
            domain={{ y: [0, totalCount] }}
            fixLabelOverlap={true}
            label='Count'
            crossAxis={false}
            tickValues={{ y: [0, dataCount] }}
          />
          {/* X AXIS */}
          <VictoryAxis
            tickValues={months}
            style={{
              ticks:{
                padding: 12
              },
              tickLabels: {
                fontSize: 13
              }
            }}
            crossAxis={false}
            tickLabelComponent={<VictoryLabel padding={13} angle={-30} verticalAnchor="end" textAnchor="middle"/>}
          />
          {/* BAR GRAPHS */}
          <VictoryBar
            data={dataOfGraph}
            labels={dataCount}
            style={
              {
                data: { stroke: "none", fill: "#3F71D7", align: "center" },
                parent: { border: "1px solid #ccc" }
              }
            }
          />
        </VictoryChart>
      );
    }
  }

}

export default TotalLeadsBySourceBarGraph;